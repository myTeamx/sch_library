<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ujn.library.dao.BorrowingRecordMapper">
  <resultMap id="BaseResultMap" type="com.ujn.library.entity.BorrowingRecord">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="book_id" jdbcType="VARCHAR" property="bookId" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
  </resultMap>

  <resultMap id="BookBaseResultMap" type="com.ujn.library.entity.Book" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="book_name" property="bookName" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="press" property="press" jdbcType="VARCHAR" />
    <result column="category" property="category" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
  </resultMap>

  <resultMap id="BorrowBookResultMap" type="com.ujn.library.entity.BorrowBook" >
    <result column="book_name" property="bookName" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="category" property="category" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
  </resultMap>

  <select id="getBookIdsByUserId" parameterType="String" resultType="String">
    select book_id from borrowing_record where user_id=#{user_id} and state=0
  </select>

  <select id="getBooksByUserId" parameterType="String" resultMap="BookBaseResultMap">
    select b.* from book b right join
    (select book_id from borrowing_record where user_id=#{user_id} and state=0) bid
    on b.id=bid.book_id order by createtime limit ${start},${pageSize}
  </select>

  <insert id="borrowBook" parameterType="com.ujn.library.entity.BorrowingRecord">
    insert into borrowing_record (id,user_id,book_id,state)
    values (#{id},#{userId},#{bookId},#{state})
  </insert>

  <update id="backBook" parameterType="com.ujn.library.entity.BorrowingRecord">
    update borrowing_record set state=1 where user_id=#{userId} and book_id=#{bookId}
  </update>

  <select id="count" parameterType="String" resultType="Integer">
    select count(*) from borrowing_record where user_id=#{user_id}
  </select>

  <select id="onCount" parameterType="String" resultType="Integer">
    select count(*) from borrowing_record where state=0 and user_id=#{user_id}
  </select>

  <select id="getBorrowBookIds" parameterType="String" resultType="String">
    select book_id from borrowing_record where user_id=#{user_id} order by createtime desc limit ${start},${pageSize}
  </select>

  <select id="getBorrHistory" parameterType="String" resultMap="BorrowBookResultMap">
    select b.book_name book_name,b.author author,b.category category,br.state state,br.createtime createtime from
      (select br.user_id,br.book_id,br.state,br.createtime from borrowing_record br where user_id=#{user_id} limit ${start},${pageSize}) br
    left join book b on br.book_id=b.id order by br.createtime desc
  </select>

  <select id="countAll" parameterType="String" resultType="Integer">
    select count(*) from borrowing_record where user_id=#{user_id}
  </select>

</mapper>